query GetProposals(
  $skip: NonNegativeInt
  $limit: PositiveInt = 10
  $orderDirection: queryInput_proposals_orderDirection = desc
  $status: JSON
  $fromDate: Float
) {
  proposals(
    skip: $skip
    limit: $limit
    orderDirection: $orderDirection
    status: $status
    fromDate: $fromDate
  ) {
    items {
      id
      daoId
      txHash
      description
      quorum
      forVotes
      againstVotes
      abstainVotes
      timestamp
      status
      proposerAccountId
      title
      startTimestamp
      endTimestamp
      calldatas
      targets
      values
    }
    totalCount
  }
}

query GetProposal($id: String!) {
  proposal(id: $id) {
    id
    daoId
    txHash
    proposerAccountId
    title
    description
    quorum
    timestamp
    status
    forVotes
    againstVotes
    abstainVotes
    startTimestamp
    endTimestamp
    calldatas
    targets
    values
  }
}

#  Get proposal votes
query GetVotesOnchains(
  $proposalId: String
  $limit: Int
  $after: String
  $before: String
  $orderBy: String = "timestamp"
  $orderDirection: String = "desc"
) {
  votesOnchains(
    limit: $limit
    after: $after
    before: $before
    where: { proposalId: $proposalId }
    orderBy: $orderBy
    orderDirection: $orderDirection
  ) {
    pageInfo {
      startCursor
      endCursor
      hasNextPage
      hasPreviousPage
    }
    totalCount
    items {
      voterAccountId
      txHash
      daoId
      voterAccountId
      proposalId
      support
      votingPower
      reason
      timestamp
    }
  }
}

# Get voting power change
query GetVotingPower(
  $addresses: JSON!
  $days: queryInput_historicalVotingPower_days!
) {
  historicalVotingPower(addresses: $addresses, days: $days) {
    address
    votingPower
  }
}
